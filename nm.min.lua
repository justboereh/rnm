local a={}function a.random(...)local b={...}for c,d in pairs(b)do if type(d)~='number'then error('Argument '..c..' invalid data type')end end;math.randomseed(tick()*math.random())if#b==0 then return math.random()elseif#b==1 then return b[1]>0 and math.random(0,b[1])or math.random(b[1],0)elseif#b==2 then return math.random(b[1],b[2])elseif#b%2==0 then local e=math.random(1,#b*0.5)math.randomseed(tick()*math.random())return math.random(b[e*2-1],b[e*2])end end;function a.round(b,c)if not b then error('Argument 1 missing or nil')end;if type(b)~='number'or c and type(c)~='number'then error('Argument 1 or 2 invalid data type')end;return c and math.floor(b*c+0.5)/c or math.floor(b+0.5)end;function a.comma(b,c)if not b then error('Argument 1 missing or nil')end;if not c then if type(b)~='number'then error('Argument 1 invalid data type')end;b=tostring(b)return#b%3==0 and b:reverse():gsub("(%d%d%d)","%1,"):reverse():sub(2)or b:reverse():gsub("(%d%d%d)","%1,"):reverse()else if type(b)~='string'then error('Arugment 1 invalid data type')end;return b:gsub(',',''):gsub(', ',''):gsub(' ,',''):gsub(' , ','')end end;function a.shorten(b,f,g)if not b then error('Argument 1 missing or nil')end;if type(b)~='number'then error('Argument 1 invalid data type')end;if f and(type(f)~='number'or f<0)then error('Argument 2 invalid data type')end;if b<0 then g=true;b=b-1 else g=false end;if b<1e3 then return b end;local d={{1e3,'k'},{1e6,'m'},{1e8,'b'},{1e12,'t'},{1e15,'q'},{1e18,'Q'},{1e21,'s'},{1e24,'S'},{1e27,'o'},{1e30,'n'},{1e33,'d'},{1e36,'U'},{1e39,'D'}}for e,c in ipairs(d)do if c[1]>b then local h=tostring(b/d[e-1][1]):split('.')return f and(g and'-'or'')..h[1]..'.'..h[2]:sub(1,a.round(f))..d[e-1][2]or(g and'-'or'')..h[1]..d[e-1][2]end end end;function a.toInt(...)local b={...}if#b==0 then error('Arguments missing or nil')end;local c={}for i,e in pairs(b)do if type(e)=='string'then for d,e in e:gmatch("(%d+)((%.*)%d+)")do c[#c+1]=d end elseif type(e)=='number'then c[#c+1]=math.floor(e)else error('Argument '..i..' invalid data type')end end;return#c==1 and c[1]or c end;function a.toNum(...)local b={...}if#b==0 then error('Arguments missing or nil')end;local c={}for i,e in pairs(b)do if type(e)=='string'then for d,e in e:gmatch("(%d+)((%.*)%d+)")do c[#c+1]=d+e end elseif type(e)=='number'then c[#c+1]=e else error('Argument '..i..' invalid data type')end end;return#c==1 and c[1]or c end;return a
